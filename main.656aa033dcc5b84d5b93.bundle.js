(()=>{"use strict";var t,e={2614:(t,e,s)=>{var i=s(2260),n=s(2511);const a={startTerrainHeight:.5,slopeAmplitude:200,slopeLengthRange:[375,750],gridDensity:64,layers:[{color:13165035,width:5},{color:6065609,width:22},{color:2243451,width:10},{color:2960428,width:5},{color:3813938,width:250}]};class o{constructor(t,e,s=a){this.yOffset=0,this.scene=t,this.b2Physics=e,this.config=s;const i=Math.floor(1.5*s.slopeLengthRange[1]);this.pointsPool=[];for(let t=0;t<i;t++)this.pointsPool.push({x:0,y:0});this.vec2Pool=[];for(let t=0;t<i;t++)this.vec2Pool.push(new n.b2Vec2(0,0));this.chunks=[this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics(),this.scene.add.graphics()],this.terrainBody=this.b2Physics.world.CreateBody(),this.slopeStart=new Phaser.Math.Vector2(0,0),this.update()}update(){const{zoom:t,width:e,worldView:s}=this.scene.cameras.main;for(;this.slopeStart.x<s.x+e+1/t*500;)this.updateChunk()}updateChunk(){const[t,e]=this.generatePoints();this.createTerrainColliders(e),this.drawTerrain(t),this.drawDecoration(t),this.drawObstacles(t)}createTerrainColliders(t){const e=new n.b2ChainShape;e.CreateChain(t,t.length,t[0],t[t.length-1]);const s={shape:e,density:0,friction:0};this.terrainBody.CreateFixture(s)}drawTerrain(t){const e=this.chunks.shift();if(!e)return;this.chunks.push(e),e.clear();const s=t.length-1,i=Math.max(t[0].y,t[s].y)+2*this.scene.cameras.main.height;let n=0;t.push({x:t[s].x,y:i},{x:t[0].x,y:i});for(const{color:s,width:i}of this.config.layers)e.translateCanvas(0,n),e.fillStyle(s),e.fillPoints(t,!0,!0),e.translateCanvas(0,0),n=i;t.length-=2}drawDecoration(t){}drawObstacles(t){const e=t[0],s=t[t.length-1],i=s.x-e.x;Math.abs(e.y-s.y)<=50&&i>=.8*this.config.slopeLengthRange[1]&&Math.random()>.5&&this.b2Physics.createBox(s.x,s.y,0,50,50,!1)}generatePoints(){this.slopeEnd=this.getNextSlopeEnd();const t=[],e=[],s=this.b2Physics.worldScale;let i=this.slopeStart.x,n=0;const{startTerrainHeight:a,slopeAmplitude:o}=this.config,r=this.scene.cameras.main.height*a,h=this.slopeEnd.x-this.slopeStart.x,c=this.slopeStart.x,l=this.slopeStart.y,d=this.slopeEnd.y;let g,y;for(;i<=this.slopeEnd.x;){let a=r+this.interpolate(l,d,(i-c)/h)*o;g=this.pointsPool[n],g.x=i,g.y=a,t.push(g),y=this.vec2Pool[n],y.x=g.x/s,y.y=g.y/s,e.push(y),i+=this.config.gridDensity,n++}return this.slopeStart.x=this.slopeEnd.x,this.slopeStart.y=this.slopeEnd.y,[t,e]}getNextSlopeEnd(){const{gridDensity:t,slopeLengthRange:e}=this.config;let s=Phaser.Math.Between(e[0],e[1]);s=Math.round(s/t)*t,this.yOffset+=s>.8*this.config.slopeLengthRange[1]?.2:.05;const i=(this.config.slopeLengthRange[1],.75);return 0===this.slopeStart.x?{x:Math.round(1.5*a.slopeLengthRange[1]/t)*t,y:0}:{x:this.slopeStart.x+s,y:Math.random()*i+this.yOffset}}interpolate(t,e,s){let i=.5*(1-Math.cos(s*Math.PI));return t*(1-i)+e*i}}class r extends Phaser.Events.EventEmitter{constructor(t){super(),this.angleStartAir=0,this.anglePreviousUpdate=0,this.totalRotation=0,this.currentFlipRotation=0,this.totalFrontflips=0,this.totalBackflips=0,this.snowman=t,this.body=t.body.GetUserData(),this.state=t.isInAir()?"in-air":"grounded",this.on("enter-in-air",(()=>{this.state="in-air",this.angleStartAir=i.Math.Angle.Normalize(this.body.rotation),console.log("----- enter-in-air")})),this.on("enter-grounded",(()=>{this.state="grounded",console.log("------ enter-grounded",this.totalRotation.toFixed(1)),this.totalRotation=0,this.currentFlipRotation=0})),this.on("enter-crashed",(()=>{this.state="crashed",this.snowman.b2Physics.enterBulletTime(-1,.4),this.snowman.scene.cameras.main.shake(200,.01),console.log("------ enter crashed")}))}update(){const t=this.snowman.isInAir();if("crashed"!==this.state&&this.snowman.isCrashed&&this.emit("enter-crashed"),"grounded"===this.state&&t?this.emit("enter-in-air"):"in-air"!==this.state||t||this.emit("enter-grounded"),"in-air"===this.state){const t=i.Math.Angle.Normalize(this.body.rotation),e=this.calculateDifferenceBetweenAngles(this.anglePreviousUpdate,t);this.totalRotation+=e,this.currentFlipRotation+=e,this.anglePreviousUpdate=t,this.currentFlipRotation>=1.25*Math.PI?(this.totalFrontflips++,this.currentFlipRotation=0):this.currentFlipRotation<=-1.25*Math.PI&&(this.totalBackflips++,this.currentFlipRotation=0)}console.log("front",this.totalFrontflips," - back",this.totalBackflips)}calculateDifferenceBetweenAngles(t,e){let s=e-t;return s<-Math.PI?s+=2*Math.PI:s>Math.PI&&(s-=2*Math.PI),s}}class h{constructor(t,e=250,s=50){this.numSegments=10,this.segmentLength=8.4,this.segmentThickness=3.375,this.segments=[],this.pointStart=new n.b2Vec2(0,0),this.pointEnd=new n.b2Vec2(0,0),this.player=t,this.scene=t.scene,this.b2Physics=t.b2Physics,this.debugGraphics=this.scene.add.graphics(),this.generateSegments(e,s,this.b2Physics.worldScale/2)}update(){this.player.debug&&this.debugGraphics.clear();for(const t of this.segments)this.resetSegment(t),t.body.GetWorldPoint(n.b2Vec2.ZERO,this.pointStart),t.body.GetWorldPoint(t.groundRayDirection,this.pointEnd),this.b2Physics.world.RayCast(this.pointStart,this.pointEnd,t.groundRayCallback),this.player.debug&&this.drawDebug(t.groundRayResult.hit?255:65280),t.crashRayResult&&t.crashRayCallback&&t.crashRayDirection&&(t.body.GetWorldPoint(n.b2Vec2.ZERO,this.pointStart),t.body.GetWorldPoint(t.crashRayDirection,this.pointEnd),this.b2Physics.world.RayCast(this.pointStart,this.pointEnd,t.crashRayCallback),this.player.debug&&this.drawDebug(t.crashRayResult.hit?255:65280))}getTimeInAir(){if(this.segments.some((t=>t.groundRayResult.hit)))return-1;const t=Math.max(...this.segments.map((t=>t.groundRayResult.lastHitTime)));return this.scene.game.getTime()-t}isInAir(){return-1!==this.getTimeInAir()}rayCallbackFactory(t){return(e,s,i,n)=>(t.hit=!0,t.point=s,t.normal=i,t.fraction=n,t.lastHitTime=this.scene.game.getTime(),n)}resetSegment(t){t.groundRayResult.hit=!1,t.groundRayResult.point=null,t.groundRayResult.normal=null,t.groundRayResult.fraction=-1,t.crashRayResult&&(t.crashRayResult.hit=!1,t.crashRayResult.point=null,t.crashRayResult.normal=null,t.crashRayResult.fraction=-1)}drawDebug(t){this.debugGraphics.lineStyle(2,t,1);const e=this.b2Physics.worldScale;this.debugGraphics.lineBetween(this.pointStart.x*e,this.pointStart.y*e,this.pointEnd.x*e,this.pointEnd.y*e)}generateSegments(t,e,s){const{numSegments:i,segmentLength:a,segmentThickness:o}=this,r={hit:!1,point:null,normal:null,fraction:-1,lastHitTime:-1};for(let i=1;i<=this.numSegments;i++){const h=this.b2Physics.createBox(t+a*i,e,0,a,o,!0,13973086),c=i===this.numSegments,l=Object.assign({},r),d=Object.assign({},r);this.segments.push({body:h,groundRayDirection:new n.b2Vec2(0,s/this.b2Physics.worldScale),groundRayResult:l,groundRayCallback:this.rayCallbackFactory(l),crashRayDirection:c?new n.b2Vec2(s/this.b2Physics.worldScale,0):void 0,crashRayResult:c?d:void 0,crashRayCallback:c?this.rayCallbackFactory(d):void 0})}this.nose=this.segments[this.segments.length-1],this.leftBinding=this.segments[3].body,this.rightBinding=this.segments[6].body;const h=[{dampingRatio:.5,frequencyHz:6,referenceAngle:-.35},{dampingRatio:.5,frequencyHz:6,referenceAngle:-.25},{dampingRatio:.5,frequencyHz:7,referenceAngle:-.05},{dampingRatio:.5,frequencyHz:8,referenceAngle:-.025},{dampingRatio:.5,frequencyHz:10,referenceAngle:0},{dampingRatio:.5,frequencyHz:8,referenceAngle:-.025},{dampingRatio:.5,frequencyHz:7,referenceAngle:-.05},{dampingRatio:.5,frequencyHz:6,referenceAngle:-.25},{dampingRatio:.5,frequencyHz:6,referenceAngle:-.35}];for(let s=0;s<i-1;s++){const[i,o]=this.segments.slice(s,s+2),r=new n.b2Vec2((t+a/2+a*(s+1))/this.b2Physics.worldScale,e/this.b2Physics.worldScale),{dampingRatio:c,frequencyHz:l,referenceAngle:d}=h[s],g=new n.b2WeldJointDef;g.Initialize(i.body,o.body,r),g.referenceAngle=d,n.b2AngularStiffness(g,l,c,g.bodyA,g.bodyB),this.b2Physics.world.CreateJoint(g)}}}class c{constructor(t,e){this.debug=!1,this.isCrashed=!1,this.crashIgnoredBodies=[],this.boostForce=27.5,this.jumpForce=300,this.boostVector=new n.b2Vec2(0,0),this.jumpVector=new n.b2Vec2(0,0),this.legMinLength=25,this.legMaxLength=40,this.scene=t,this.b2Physics=e,this.cursors=this.scene.input.keyboard.createCursorKeys(),this.board=new h(this,250,50),this.generateSnowmanBody(250,50),this.comboComponent=new r(this)}update(){var t;if(this.isCrashed&&this.detachBoard(),this.lostHead&&this.detachHead(),this.getTimeInAir()>100&&this.resetLegs(),!this.isCrashed){if(this.board.update(),this.comboComponent.update(),null===(t=this.scene.input.activePointer)||void 0===t?void 0:t.isDown){const t=this.scene.input.activePointer;t.motionFactor=.2,this.scene.input.activePointer.x<this.scene.cameras.main.width/2?this.leanBackward():this.leanForward(),t.velocity.y<-30&&this.scene.game.getTime()-t.moveTime<=300&&this.jump()}else this.scene.input.activePointer.motionFactor=.8;this.cursors.up.isDown&&this.scene.game.getTime()-this.cursors.up.timeDown<=300&&this.jump(),this.cursors.left.isDown&&this.leanBackward(),this.cursors.right.isDown&&this.leanForward(),this.cursors.down.isDown&&this.leanCenter(),this.boost()}}getTimeInAir(){return this.board.getTimeInAir()}isInAir(){return this.board.isInAir()}detachBoard(){this.bindingJointLeft&&this.b2Physics.world.DestroyJoint(this.bindingJointLeft),this.bindingJointRight&&this.b2Physics.world.DestroyJoint(this.bindingJointRight),this.jointDistLeft&&this.b2Physics.world.DestroyJoint(this.jointDistLeft),this.jointDistRight&&this.b2Physics.world.DestroyJoint(this.jointDistRight),this.jointDistRight&&this.board.segments[this.board.segments.length-1].body.SetLinearVelocity(n.b2Vec2.ZERO)}detachHead(){this.neckJoint&&this.b2Physics.world.DestroyJoint(this.neckJoint),this.neckJoint=null}boost(){const t=this.isInAir()?.6:.9,e=this.boostVector;e.Set(this.boostForce*t,0),this.board.segments&&this.board.segments[4].body.ApplyForceToCenter(e,!0),this.body.ApplyForceToCenter(e,!0)}resetLegs(){this.setDistanceLegs(20,25)}leanBackward(){this.body.ApplyAngularImpulse(this.isInAir()?-3:-5),this.setDistanceLegs(22.5,40)}leanForward(){this.body.ApplyAngularImpulse(this.isInAir()?3:5),this.setDistanceLegs(40,22.5)}leanCenter(){this.body.ApplyForceToCenter(new n.b2Vec2(0,10)),this.setDistanceLegs(25,25)}jump(){this.setDistanceLegs(40,40);const t=this.board.segments.map((t=>t.groundRayResult.hit)),e=t[0],s=t[t.length-1],i=t[4]||t[5]||t[6],n=i?.6:1,a=this.jumpVector;a.Set(this.boostForce*n,0),e&&!s?a.y=-this.jumpForce*n:s&&!e?this.body.GetWorldVector({x:0,y:-this.jumpForce*n},a):i&&(a.y=-this.jumpForce/2.8),this.body.ApplyForceToCenter(a,!0)}setDistanceLegs(t,e){if(this.jointDistLeft){const e=t/this.b2Physics.worldScale*.6;this.jointDistLeft.SetMinLength(this.legMinLength/this.b2Physics.worldScale*.6),this.jointDistLeft.SetMaxLength(this.legMaxLength/this.b2Physics.worldScale*.6),this.jointDistLeft.SetLength(e)}if(this.jointDistRight){const t=e/this.b2Physics.worldScale*.6;this.jointDistRight.SetMinLength(this.legMinLength/this.b2Physics.worldScale*.6),this.jointDistRight.SetMaxLength(this.legMaxLength/this.b2Physics.worldScale*.6),this.jointDistRight.SetLength(t)}}generateSnowmanBody(t,e){if(!this.board.leftBinding||!this.board.rightBinding)return;const s=this.b2Physics.worldScale,a=.7*s,o=.7*s,r=.3*s,h=.5,c=o,l=r,d=new n.b2Vec2(t+this.board.segmentLength*(this.board.numSegments/2+h),e-2*s-s/2),g=this.b2Physics.createCircle(d.x,d.y-s-a,0,a,{color:13165035,type:n.b2BodyType.b2_dynamicBody,linearDamping:.15,angularDamping:.15});this.body=this.b2Physics.createCircle(d.x,d.y,0,s,{color:13165035,type:n.b2BodyType.b2_dynamicBody,linearDamping:.15,angularDamping:.15}),this.crashIgnoredBodies.push(this.body);const y=new i.Math.Vector2(0,-1).multiply({x:0,y:s}).add(d);this.neckJoint=this.b2Physics.createRevoluteJoint({bodyA:this.body,bodyB:g,anchor:y,lowerAngle:-.25,upperAngle:.25,enableLimit:!0}),this.b2Physics.on("post-solve",((t,e)=>{var s;if(this.isCrashed&&this.lostHead)return;const i=t.GetFixtureA().GetBody(),n=t.GetFixtureB().GetBody();if(this.crashIgnoredBodies.includes(i)||this.crashIgnoredBodies.includes(n))return;const a=this.board.nose;i===g||n===g?Math.max(...e.normalImpulses)>7&&(this.lostHead=!0,this.isCrashed=!0):!a||i!==a.body&&n!==a.body||Math.max(...e.normalImpulses)>7&&(null===(s=a.crashRayResult)||void 0===s?void 0:s.hit)&&(this.isCrashed=!0)}));const p=s+o/1.75,u=new i.Math.Vector2(0,1).rotate(h).multiply({x:p,y:p}).add(d),b=this.b2Physics.createBox(u.x,u.y,h,r,o,!0),m=new i.Math.Vector2(0,1).rotate(h).multiply({x:s,y:s}).add(d);this.b2Physics.createRevoluteJoint({bodyA:this.body,bodyB:b,anchor:m,lowerAngle:-.2,upperAngle:1,enableLimit:!0});const w=new i.Math.Vector2(0,1).rotate(.25).multiply({x:o,y:o}).add(u),S=this.b2Physics.createBox(w.x,w.y,0,r,o,!0),f=new i.Math.Vector2(w.x,w.y).add({x:0,y:-o/2});this.b2Physics.createRevoluteJoint({bodyA:b,bodyB:S,anchor:f,lowerAngle:-1.5,upperAngle:.375,enableLimit:!0});const x=new i.Math.Vector2(w).add({x:0,y:o/2});this.bindingJointLeft=this.b2Physics.createRevoluteJoint({bodyA:S,bodyB:this.board.leftBinding,anchor:x});const P=s+o/1.75,R=new i.Math.Vector2(0,1).rotate(-.5).multiply({x:P,y:P}).add(d),A=this.b2Physics.createBox(R.x,R.y,-.5,r,o,!0),B=new i.Math.Vector2(0,1).rotate(-.5).multiply({x:s,y:s}).add(d);this.b2Physics.createRevoluteJoint({bodyA:this.body,bodyB:A,anchor:B,lowerAngle:-1,upperAngle:.2,enableLimit:!0});const v=new i.Math.Vector2(0,1).rotate(-.25).multiply({x:o,y:o}).add(R),D=this.b2Physics.createBox(v.x,v.y,0,r,o,!0),C=new i.Math.Vector2(v.x,v.y).add({x:0,y:-o/2});this.b2Physics.createRevoluteJoint({bodyA:A,bodyB:D,anchor:C,lowerAngle:-.375,upperAngle:1.5,enableLimit:!0});const L=new i.Math.Vector2(v).add({x:0,y:o/2});this.bindingJointRight=this.b2Physics.createRevoluteJoint({bodyA:D,bodyB:this.board.rightBinding,anchor:L});const M={length:this.legMinLength,frequencyHz:8,dampingRatio:5};this.jointDistLeft=this.b2Physics.createDistanceJoint(this.body,this.board.rightBinding,m,x,M),this.jointDistRight=this.b2Physics.createDistanceJoint(this.body,this.board.leftBinding,B,L,M);const F=Math.PI/180*90,T=.5,k=s+c/1.75,V=new i.Math.Vector2(-1,0).rotate(T).multiply({x:k,y:k}).add(d),I=new i.Math.Vector2(-1,0).rotate(T).multiply({x:s,y:s}).add(d),G=this.b2Physics.createBox(V.x,V.y,F+T,l,c,!0);this.b2Physics.createRevoluteJoint({bodyA:this.body,bodyB:G,anchor:I,lowerAngle:-1.25,upperAngle:.75,enableLimit:!0});const E=new i.Math.Vector2(-1,0).rotate(T).multiply({x:c,y:c}).add(V),J=this.b2Physics.createBox(E.x,E.y,F+T,l,c,!0),O=new i.Math.Vector2(E).add(new i.Math.Vector2(c/2,0).rotate(T));this.b2Physics.createRevoluteJoint({bodyA:G,bodyB:J,anchor:O,lowerAngle:-.75,upperAngle:.75,enableLimit:!0}),this.crashIgnoredBodies.push(J);const j=-Math.PI/180*90,_=-.5,H=s+c/1.75,z=new i.Math.Vector2(1,0).rotate(_).multiply({x:H,y:H}).add(d),q=new i.Math.Vector2(1,0).rotate(_).multiply({x:s,y:s}).add(d),W=this.b2Physics.createBox(z.x,z.y,j+_,l,c,!0);this.b2Physics.createRevoluteJoint({bodyA:this.body,bodyB:W,anchor:q,lowerAngle:-.75,upperAngle:1.25,enableLimit:!0});const N=new i.Math.Vector2(1,0).rotate(_).multiply({x:c,y:c}).add(z),U=this.b2Physics.createBox(N.x,N.y,j+_,l,c,!0),Z=new i.Math.Vector2(N).add(new i.Math.Vector2(-c/2,0).rotate(_));this.b2Physics.createRevoluteJoint({bodyA:W,bodyB:U,anchor:Z,lowerAngle:-.75,upperAngle:.75,enableLimit:!0}),this.crashIgnoredBodies.push(U)}}class l extends Phaser.Events.EventEmitter{constructor(t,e,s){super(),this.textureKeys=new Set,this.ZERO=new n.b2Vec2(0,0),this.bulletTime=1,this.scene=t,this.worldScale=e,this.world=n.b2World.Create(s),this.world.SetContactListener({BeginContact:this.BeginContact.bind(this),EndContact:this.EndContact.bind(this),PreSolve:this.PreSolve.bind(this),PostSolve:this.PostSolve.bind(this)}),this.world.SetAllowSleeping(!1),this.world.SetWarmStarting(!0),this.userDataGraphics=t.add.graphics()}enterBulletTime(t,e){this.bulletTime=e,-1!==t&&setTimeout((()=>this.bulletTime=1),t)}createBox(t,e,s,i,a,o,r=11962192){const h=new n.b2PolygonShape;h.SetAsBox(i/2/this.worldScale,a/2/this.worldScale);const c={shape:h,density:.1,friction:.001,restitution:.005},l=this.world.CreateBody({awake:!0,position:{x:t/this.worldScale,y:e/this.worldScale},angle:s,linearDamping:.15,angularDamping:.1,type:o?n.b2BodyType.b2_dynamicBody:n.b2BodyType.b2_staticBody});l.CreateFixture(c),l.SetMassData({mass:.5,center:new n.b2Vec2,I:1});let d=this.scene.add.graphics();d.fillStyle(r),d.fillRect(-i/2,-a/2,2*i,2*a);const g=`box-${i}-${a}-${r}`;this.textureKeys.has(g)||(this.textureKeys.add(g),d.generateTexture(g,i,a));const y=this.scene.add.image(t,e,g);return l.SetUserData(y),l}createCircle(t,e,s,i,a={}){const o=new n.b2CircleShape;o.m_radius=i/this.worldScale;const r={shape:o,density:1,friction:.001,restitution:.005},h=this.world.CreateBody({position:{x:t/this.worldScale,y:e/this.worldScale},angle:s,linearDamping:a.linearDamping,angularDamping:a.angularDamping,type:a.type});h.CreateFixture(r),h.SetMassData({mass:1,center:this.ZERO,I:1}),this.userDataGraphics.clear(),this.userDataGraphics.fillStyle(a.color||3355443),this.userDataGraphics.fillCircle(i,i,i);const c=`circle-${i}-${a.color||3355443}`;this.textureKeys.has(c)||(this.textureKeys.add(c),this.userDataGraphics.generateTexture(c,2*i,2*i));const l=this.scene.add.image(t,e,c);return h.SetUserData(l),h}createRevoluteJoint(t){const e=new n.b2RevoluteJointDef,s=new n.b2Vec2(t.anchor.x/this.worldScale,t.anchor.y/this.worldScale);return e.Initialize(t.bodyA,t.bodyB,s),e.collideConnected=!1,t.lowerAngle&&(e.lowerAngle=t.lowerAngle),t.upperAngle&&(e.upperAngle=t.upperAngle),t.enableLimit&&(e.enableLimit=t.enableLimit),this.world.CreateJoint(e)}createDistanceJoint(t,e,s,i,a={}){const o=new n.b2DistanceJointDef,r=this.worldScale;o.Initialize(t,e,{x:s.x/r,y:s.y/r},{x:i.x/r,y:i.y/r}),o.collideConnected=!0;const h=a.length?a.length/this.worldScale:0;return o.length=h,o.minLength=h,o.maxLength=h,n.b2AngularStiffness(o,a.frequencyHz||15,a.dampingRatio||10,o.bodyA,o.bodyB),this.world.CreateJoint(o)}update(){let t=Math.round(this.scene.game.loop.delta)/640*this.bulletTime;const e=Math.floor(Math.max(this.scene.game.loop.actualFps/3,2));this.world.Step(t,{positionIterations:e,velocityIterations:e}),this.world.ClearForces();const s=this.scene.cameras.main.scrollX-450,i=this.worldScale;for(let t=this.world.GetBodyList();t;t=t.GetNext()){if(!t)continue;let e=t.GetUserData();if(e){let{x:s,y:n}=t.GetPosition();e.x=s*i,e.y=n*i,e.rotation=t.GetAngle()}else for(let e=t.GetFixtureList();e;e=e.GetNext()){const n=e.GetShape();this.isChain(n)&&n.m_vertices[n.m_vertices.length-1].x*i<s&&t.DestroyFixture(e)}}}isEdge(t){return t.GetType()===n.b2ShapeType.e_edge}isChain(t){return t.GetType()===n.b2ShapeType.e_chain}isPolygon(t){return t.GetType()===n.b2ShapeType.e_polygon}isCircle(t){return t.GetType()===n.b2ShapeType.e_circle}BeginContact(t){this.emit("begin-contact",t)}EndContact(t){this.emit("end-contact",t)}PreSolve(t,e){this.emit("pre-solve",t,e)}PostSolve(t,e){this.emit("post-solve",t,e)}}class d{constructor(t){this.scene=t;const{width:e,height:s}=this.scene.cameras.main;this.bgSpaceBack=this.scene.add.tileSprite(0,0,e,s,"space-back").setOrigin(0).setScrollFactor(0,0),this.bgSpaceMid=this.scene.add.tileSprite(0,0,e,s,"space-mid").setOrigin(0).setScrollFactor(0,0),this.bgSpaceFront=this.scene.add.tileSprite(0,0,e,s,"space-front").setOrigin(0).setScrollFactor(0,0),this.bgLandscapeMountains=this.scene.add.tileSprite(0,0,e,s,"bg-landscape-4-mountain").setZ(2).setScale(1.25,2).setOrigin(0,.5).setScrollFactor(0,0).setTint(30,30,30,30),this.bgLandscapeHills=this.scene.add.tileSprite(0,0,e,s,"bg-landscape-3-trees").setScale(1.25,1.5).setOrigin(0,.25).setScrollFactor(0,0).setZ(1).setTint(50,50,50,50)}update(){const{scrollX:t,scrollY:e}=this.scene.cameras.main;this.bgSpaceBack.setTilePosition(.001*t,.001*e),this.bgSpaceMid.setTilePosition(.0025*t,.0025*e),this.bgSpaceFront.setTilePosition(.005*t,.005*e),this.bgLandscapeMountains.setTilePosition(.025*t,0),this.bgLandscapeHills.setTilePosition(.035*t,0)}}class g extends i.Scene{constructor(){super({key:"GameScene"})}create(){return t=this,e=void 0,i=function*(){this.music=this.sound.add("theme"),this.music.play({loop:!0,volume:.3,rate:.9,delay:1.25}),this.b2Physics=new l(this,15,new n.b2Vec2(0,9.8)),this.backdrop=new d(this),this.terrainSimple=new o(this,this.b2Physics),this.wickedSnowman=new c(this,this.b2Physics);const t=this.cameras.main.worldView.x+this.cameras.main.width/2,e=this.cameras.main.worldView.y+this.cameras.main.height/2;this.add.text(t+50,e-200,"WICKED SNOWMAN").setScrollFactor(.35).setFontSize(40).setOrigin(.5),this.add.text(t+50,e-100,"Don't lose your head").setScrollFactor(.35).setFontSize(25).setOrigin(.5),this.add.text(t-35,e-62.5," ↑  jump").setScrollFactor(.35).setFontSize(20).setOrigin(0),this.add.text(t-35,e-37.5,"← → control").setScrollFactor(.35).setFontSize(20).setOrigin(0),this.playAgainButton=this.add.text(t,e,"PLAY AGAIN?").setScrollFactor(0).setFontSize(25).setOrigin(.5).setPadding(12).setAlpha(0).setStyle({backgroundColor:"#223B7B"}).setInteractive({useHandCursor:!0}).on("pointerdown",(()=>this.restartGame())).on("pointerover",(()=>this.playAgainButton.setStyle({fill:"#5c8dc9"}))).on("pointerout",(()=>this.playAgainButton.setStyle({fill:"#FFF"}))),this.textDistance=this.add.text(12,12,"Travelled: 0m").setScrollFactor(0,0).setFontSize(16),this.textDistance.setShadow(1,1,"#000000",2),this.cameras.main.startFollow(this.wickedSnowman.body.GetUserData(),!1,.8,.25),this.cameras.main.followOffset.set(-375,0),this.cameras.main.setDeadzone(50,125),this.cameras.main.setBackgroundColor(0),this.cameras.main.setZoom(1,1)},new((s=void 0)||(s=Promise))((function(n,a){function o(t){try{h(i.next(t))}catch(t){a(t)}}function r(t){try{h(i.throw(t))}catch(t){a(t)}}function h(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(o,r)}h((i=i.apply(t,e||[])).next())}));var t,e,s,i}restartGame(){this.music.stop(),this.scene.restart()}update(){this.wickedSnowman.isCrashed&&!this.playAgainButton.alpha&&(this.playAgainButton.setAlpha(1),this.tweens.add({targets:this.music,volume:0,detune:-500,rate:.5,duration:3e3,onComplete:t=>this.music.stop()})),this.wickedSnowman.isCrashed||(this.metersTravelled=Math.floor(this.wickedSnowman.body.GetPosition().Length()/2),this.textDistance.setText("Travelled: "+this.metersTravelled+"m")),this.b2Physics.update(),this.backdrop.update(),this.wickedSnowman.update(),this.terrainSimple.update()}}class y extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.audio("theme",["assets/audio/theme/theme.ogg","assets/audio/theme/theme.mp3","assets/audio/theme/theme.aac"]),this.load.image("space-back","assets/img/bgSpace/bg_space_seamless.png"),this.load.image("space-mid","assets/img/bgSpace/bg_space_seamless_fl1.png"),this.load.image("space-front","assets/img/bgSpace/bg_space_seamless_fl2.png"),this.load.image("bg-landscape-3-trees","assets/img/bgLandscape/landscape_0002_3_trees.png"),this.load.image("bg-landscape-4-mountain","assets/img/bgLandscape/landscape_0003_4_mountain.png")}create(){this.scene.start("GameScene")}}const p={type:i.WEBGL,backgroundColor:"#ffffff",disableContextMenu:!0,fps:{min:55,target:60,smoothStep:!0},roundPixels:!0,scale:{parent:"phaser-wrapper",mode:i.Scale.FIT,autoCenter:i.Scale.CENTER_BOTH,width:960,height:540},scene:[y,g]};window.addEventListener("load",(()=>{new i.Game(p)}))}},s={};function i(t){var n=s[t];if(void 0!==n)return n.exports;var a=s[t]={exports:{}};return e[t].call(a.exports,a,a.exports,i),a.exports}i.m=e,t=[],i.O=(e,s,n,a)=>{if(!s){var o=1/0;for(l=0;l<t.length;l++){for(var[s,n,a]=t[l],r=!0,h=0;h<s.length;h++)(!1&a||o>=a)&&Object.keys(i.O).every((t=>i.O[t](s[h])))?s.splice(h--,1):(r=!1,a<o&&(o=a));if(r){t.splice(l--,1);var c=n();void 0!==c&&(e=c)}}return e}a=a||0;for(var l=t.length;l>0&&t[l-1][2]>a;l--)t[l]=t[l-1];t[l]=[s,n,a]},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={179:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var n,a,[o,r,h]=s,c=0;if(o.some((e=>0!==t[e]))){for(n in r)i.o(r,n)&&(i.m[n]=r[n]);if(h)var l=h(i)}for(e&&e(s);c<o.length;c++)a=o[c],i.o(t,a)&&t[a]&&t[a][0](),t[a]=0;return i.O(l)},s=self.webpackChunkwicked_snowman=self.webpackChunkwicked_snowman||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})();var n=i.O(void 0,[216],(()=>i(2614)));n=i.O(n)})();