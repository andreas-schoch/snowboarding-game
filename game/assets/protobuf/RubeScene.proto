syntax = "proto3";

package rube;

message Vector {
  double x = 1;
  double y = 2;
}

message VectorArray {
  repeated double x = 1;
  repeated double y = 2;
}

message CustomProperty {
  string name = 1;

  oneof value {
    int32 int = 2;
    float float = 3;
    string string = 4;
    string color = 5; 
    bool bool = 6;
    Vector vec2 = 7;
  }
}

message CollisionBitPlanes {
  repeated string names = 1;
}

//////////////////////////////////////////////////////////////////////////

message FixtureShapeCircle {
  Vector center = 1;
  double radius = 2;
}

message FixtureShapePolygon {
  VectorArray vertices = 1;
}

message FixtureShapeChain {
  VectorArray vertices = 1;
  optional bool hasNextVertex = 2;
  optional bool hasPrevVertex = 3;
  optional Vector nextVertex = 4;
  optional Vector prevVertex = 5;
}

message Fixture {
  optional string name = 1;
  optional double density = 2;
  optional uint32 filterCategoryBits = 3;
  optional uint32 filterMaskBits = 4;
  optional int32 filterGroupIndex = 5;
  optional double friction = 6;
  optional double restitution = 7;
  optional bool sensor = 8;
  repeated CustomProperty customProperties = 9;

  optional FixtureShapeCircle circle = 10;
  optional FixtureShapePolygon polygon = 11;
  optional FixtureShapeChain chain = 12;
}

////////////////////////////////////////////////////////////////////////////

message Body {
  optional string name = 1;
  optional bool active = 2;
  optional bool awake = 3;
  optional bool bullet = 4;
  optional bool fixedRotation = 5;
  optional uint32 type = 6;
  optional Vector position = 7;
  optional double angle = 8;
  optional double angularDamping = 9;
  optional double angularVelocity = 10;
  optional double linearDamping = 11;
  optional Vector linearVelocity = 12;
  optional double massDataMass = 13;
  optional Vector massDataCenter = 14;
  optional double massDataI = 15;
  repeated CustomProperty customProperties = 16;
  repeated Fixture fixture = 17;
}

////////////////////////////////////////////////////////////////////////////

message Joint {
  // Common fields for all joints
  string type = 1; 
  string name = 2;
  Vector anchorA = 3;
  Vector anchorB = 4;
  int32 bodyA = 5;
  int32 bodyB = 6;
  optional bool collideConnected = 7;
  repeated CustomProperty customProperties = 8;

  // Fields common to multiple joint types (See comment on each line to see which ones exactly use these)
  optional bool enableLimit = 9; // +Revolute, +Prismatic
  optional bool enableMotor = 10; // +Revolute, +Prismatic, +Wheel
  optional double jointSpeed = 11; // +Revolute
  optional double lowerLimit = 12; // +Revolute, +Prismatic
  optional double upperLimit = 13; // +Revolute, +Prismatic
  optional double maxMotorTorque = 14; // +Revolute, +Wheel
  optional double motorSpeed = 15; // +Revolute, +Prismatic, +Wheel
  optional double refAngle = 16; //  +Revolute, +Prismatic, +Weld   (ATTENTION: referenceAngle in .rube turned into refAngle in .json)
  optional double dampingRatio = 17;  // +Distance, +Weld
  optional double frequency = 18;     // +Distance, +Weld
  optional double length = 19;        // +Distance
  optional Vector localAxisA = 20;    // +Prismatic, +Wheel
  optional double maxMotorForce = 21; // +Prismatic
  optional double springDampingRatio = 22; // +Wheel
  optional double springFrequency = 23;    // +Wheel
  optional double maxLength = 24;          // +Rope
  optional double maxForce = 25;           // +Motor, +Friction
  optional double maxTorque = 26;          // +Motor, +Friction
  optional double correctionFactor = 27;   // +Motor
}

////////////////////////////////////////////////////////////////////////////

message Image {
  optional string name = 1;
  optional double opacity = 2;
  optional int32 renderOrder = 3;
  optional double scale = 4;
  optional double aspectScale = 5;
  optional double angle = 6;
  optional int32 body = 7;
  optional Vector center = 8;
  optional VectorArray corners = 9;
  optional string file = 10;
  optional uint32 filter = 11;
  optional bool flip = 12;
  
  repeated int32 colorTint = 13; 
  repeated int32 glDrawElements = 14;
  repeated double glTexCoordPointer = 15;
  repeated double glVertexPointer = 16;
  repeated CustomProperty customProperties = 17;
}

/////////////////////////////////////////////////////////////////////////

message Scene {
  Vector gravity = 1;
  bool allowSleep = 2;
  bool autoClearForces = 3;
  int32 positionIterations = 4;
  int32 velocityIterations = 5;
  int32 stepsPerSecond = 6;
  bool warmStarting = 7;
  bool continuousPhysics = 8;
  bool subStepping = 9;
  optional CollisionBitPlanes collisionBitPlanes = 10;
  repeated CustomProperty customProperties = 11;

  repeated Body body = 12;
  repeated Joint joint = 13;
  repeated Image image = 14;
}
