# STAGE 1: Build frontend
FROM node:20.11.0-slim as build
# https://pnpm.io/docker
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

ENV PNPM_VERSION=8.15.0
RUN curl -fsSL https://get.pnpm.io/install.sh | sh -s -- -P $PNPM_VERSION

# https://pnpm.io/cli/fetch
WORKDIR /usr/src/app
COPY ../pnpm-lock.yaml ./
RUN pnpm fetch
COPY ../ ./
RUN pnpm install -r --offline && pnpm run build-ci


# STAGE 2: Setup nginx and copy frontend build files
# Note: For prod override the dhparam.pem file with the one generated by certbot in compose file
FROM nginx:1.25.1-alpine
RUN apk add --no-cache openssl micro && \
    openssl dhparam -out /etc/nginx/dhparam.pem 1024 && \
    apk del openssl && \
    rm -rf /usr/share/nginx/html/*
# COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf
COPY --from=build /usr/src/app/dist /usr/share/nginx/html
# Regarding usage of ENTRYPOINT with nginx dockerhub image: https://github.com/nginxinc/docker-nginx/issues/422
CMD ["nginx", "-g", "daemon off;"]
